document.addEventListener('DOMContentLoaded', () => {
    firebase.auth().onAuthStateChanged(user => {
        if (user) {
            loadUserData(user.uid);
        } else {
            console.error('No user is signed in.');
        }
    });
});

function loadUserData(authenticatedUid) {
    const usersRef = firebase.database().ref('users/' + authenticatedUid);

    usersRef.once('value').then(snapshot => {
        const data = snapshot.val();
        const uidToUse = data.linkedAccount || authenticatedUid; // Use linked UID if it exists

        displayUserData(uidToUse);
    }).catch(error => {
        console.error('Error fetching user data:', error);
    });
}

function displayUserData(uid) {
    const salesRef = firebase.database().ref('sales/' + uid);
    const salesCountsRef = firebase.database().ref('salesCounts/' + uid);
    const salesOutcomesRef = firebase.database().ref('salesOutcomes/' + uid);
    const salesTimeFramesRef = firebase.database().ref('salesTimeFrames/' + uid);

    salesRef.once('value').then(snapshot => {
        const salesData = snapshot.val();
        console.log('Sales data:', salesData);
        // Display sales data
    }).catch(error => {
        console.error('Error fetching sales data:', error);
    });

    salesCountsRef.once('value').then(snapshot => {
        const salesCounts = snapshot.val();
        console.log('Sales counts data:', salesCounts);
        // Display sales counts data
    }).catch(error => {
        console.error('Error fetching sales counts data:', error);
    });

    salesOutcomesRef.once('value').then(snapshot => {
        const salesOutcomes = snapshot.val();
        console.log('Sales outcomes data:', salesOutcomes);
        // Display sales outcomes data
    }).catch(error => {
        console.error('Error fetching sales outcomes data:', error);
    });

    salesTimeFramesRef.once('value').then(snapshot => {
        const salesTimeFrames = snapshot.val();
        console.log('Sales time frames data:', salesTimeFrames);
        // Display sales time frames data
    }).catch(error => {
        console.error('Error fetching sales time frames data:', error);
    });
}

// Call this function when linking accounts
function linkAccount(newUid) {
    const user = firebase.auth().currentUser;
    if (user) {
        const userRef = firebase.database().ref('users/' + user.uid + '/linkedAccount');
        userRef.set(newUid).then(() => {
            console.log('Linked account successfully.');
            loadUserData(user.uid); // Reload data with the new linked UID
        }).catch(error => {
            console.error('Error linking account:', error);
        });
    }
}