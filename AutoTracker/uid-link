document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM fully loaded and parsed');
    
    firebase.auth().onAuthStateChanged(user => {
        if (user) {
            console.log('User authenticated:', user.uid);
            loadUserData(user.uid);
        } else {
            console.error('No user is signed in.');
        }
    });

    const linkButton = document.getElementById('linkButton');
    const uidInput = document.getElementById('uidInput');

    if (linkButton && uidInput) {
        linkButton.addEventListener('click', () => {
            const newUid = uidInput.value.trim();
            if (newUid) {
                console.log('Linking account with UID:', newUid);
                linkAccount(newUid);
            } else {
                console.warn('Please enter a valid UID.');
                alert('Please enter a valid UID.');
            }
        });
    } else {
        console.error('Link button or UID input not found in the DOM.');
    }
});

function linkAccount(newUid) {
    const user = firebase.auth().currentUser;
    if (user) {
        const linkedAccountRef = firebase.database().ref('linkedAccounts/' + user.uid);
        linkedAccountRef.set(newUid).then(() => {
            console.log('Linked account successfully:', newUid);
            loadUserData(user.uid);
        }).catch(error => {
            console.error('Error linking account:', error);
        });
    } else {
        console.error('No user is currently signed in.');
    }
}

function loadUserData(authenticatedUid) {
    const linkedAccountRef = firebase.database().ref('linkedAccounts/' + authenticatedUid);

    linkedAccountRef.once('value').then(snapshot => {
        const linkedUid = snapshot.val() || authenticatedUid;
        console.log('Using UID for data retrieval:', linkedUid);
        displayUserData(linkedUid);
    }).catch(error => {
        console.error('Error fetching linked account data:', error);
    });
}

function displayUserData(uid) {
    const salesRef = firebase.database().ref('sales/' + uid);
    const salesCountsRef = firebase.database().ref('salesCounts/' + uid);
    const salesOutcomesRef = firebase.database().ref('salesOutcomes/' + uid);
    const salesTimeFramesRef = firebase.database().ref('salesTimeFrames/' + uid);

    salesRef.once('value').then(snapshot => {
        const salesData = snapshot.val();
        console.log('Sales data:', salesData);
        // Display sales data
    }).catch(error => {
        console.error('Error fetching sales data:', error);
    });

    salesCountsRef.once('value').then(snapshot => {
        const salesCounts = snapshot.val();
        console.log('Sales counts data:', salesCounts);
        // Display sales counts data
    }).catch(error => {
        console.error('Error fetching sales counts data:', error);
    });

    salesOutcomesRef.once('value').then(snapshot => {
        const salesOutcomes = snapshot.val();
        console.log('Sales outcomes data:', salesOutcomes);
        // Display sales outcomes data
    }).catch(error => {
        console.error('Error fetching sales outcomes data:', error);
    });

    salesTimeFramesRef.once('value').then(snapshot => {
        const salesTimeFrames = snapshot.val();
        console.log('Sales time frames data:', salesTimeFrames);
        // Display sales time frames data
    }).catch(error => {
        console.error('Error fetching sales time frames data:', error);
    });
}